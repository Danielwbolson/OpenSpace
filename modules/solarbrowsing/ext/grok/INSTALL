
How to build and install Grok binaries
==========================================

UNIX/LINUX/MacOSX/Windows systems
--------------------------

Using cmake (see www.cmake.org)

Type:
  cmake .
  make

If you are root:
  make install

else if you have sudo power:
  sudo make install

else
  DESTDIR=$HOME/local make install

Note: on Linux, for a shared library build, you must run
  sudo ldconfig

to update the shared library cache.


To build the Doxygen documentation (Doxygen needs to be found on the system):
(A 'html' directory is generated in the 'doc' directory)
  make doc

Binaries are located in the 'bin' directory.

Main available cmake flags:
* To specify the install path: '-DCMAKE_INSTALL_PREFIX=/path', or use DESTDIR env variable (see above)
* To build the shared libraries and links the executables against it: '-DBUILD_SHARED_LIBS:bool=on' (default: 'ON')
  Note: when using this option, static libraries are not built and executables are dynamically linked.
* To build the CODEC executables: '-DBUILD_CODEC:bool=on' (default: 'ON')
* To build the documentation: '-DBUILD_DOC:bool=on' (default: 'OFF')
* To enable testing (and automatic result upload to http://my.cdash.org/index.php?project=grok):
    cmake . -DBUILD_TESTING:BOOL=ON -DGROK_DATA_ROOT:PATH='path/to/the/data/directory'
    make
    make Experimental
  Note : JPEG2000 test files are available with 'git clone https://github.com/GrokImageCompression/grok-test-data.git'.
  If '-DGROK_DATA_ROOT:PATH' option is omitted, test files will be automatically searched in '${CMAKE_SOURCE_DIR}/../data',
  corresponding to the location of the data directory when compiling from the trunk (and assuming the data directory has
  been checked out of course).

MACOSX
------

The same building procedures as above work for MACOSX.
The xcode project file can also be used.

If it does not work, try adding the following flag to the cmake command : 
  '-DCMAKE_OSX_ARCHITECTURES:STRING=i386'

WINDOWS
-------

You can use cmake to generate project files for the IDE you are using (VS2010, NMake, etc).
Type 'cmake --help' for available generators on your platform.

Make sure to build the third party libs (png, zlib ...):

  '-DBUILD_THIRDPARTY:BOOL=ON'
