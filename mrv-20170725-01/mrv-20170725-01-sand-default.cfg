-- The configuration has an implict
-- require('scripts/configuration_helper.lua')
-- which defines helper functions useful to customize the configuration

return {
    -- Sets the scene that is to be loaded by OpenSpace. A scene file is a description
    -- of all entities that will be visible during an instance of OpenSpace
    Scene = "${SCENE}/multires-shen/sand.scene",

    Logging = {
        LogDir = "${LOGS}/mrv/20170725-01",
        PerformancePrefix = "sand-default-",
        LogLevel = "Error",
        ImmediateFlush = true,
        CapabilitiesVerbosity = "Full"
    },

    -- Determines which SGCT configuration file is loaded, that is, if there rendering
    -- occurs in a single window, a fisheye projection, or a dome cluster system

    -- A windowed 1920x1080 fullscreen
    SGCTConfig = sgct.config.single{1920, 1080, border=false, windowPos={0,0}, shared=true, name="Multiresolution Volumes"},

    Task = "${TASKS}/default.task",

    Paths = {
        SCRIPTS = "${BASE_PATH}/scripts/mrv-20170725-01/sand",
        SHADERS = "${BASE_PATH}/shaders",
        OPENSPACE_DATA = "${BASE_PATH}/data",
        SCENE = "${OPENSPACE_DATA}/scene",
        TASKS = "${OPENSPACE_DATA}/tasks",
        SPICE = "${OPENSPACE_DATA}/spice",
        MODULES = "${BASE_PATH}/modules",
        TESTDIR = "${BASE_PATH}/tests",
        CONFIG = "${BASE_PATH}/config",
        CACHE = "${BASE_PATH}/cache",
        FONTS = "${OPENSPACE_DATA}/fonts",
        DOCUMENTATION = "${BASE_PATH}/documentation",
        LOGS = "${BASE_PATH}/logs"
    },
    Fonts = {
        Mono = "${FONTS}/Droid_Sans_Mono/DroidSansMono.ttf",
        Light = "${FONTS}/Roboto/Roboto-Regular.ttf",
        Console = "${FONTS}/Inconsolata/Inconsolata-Regular.ttf"
    },

    Launcher = {
        LogLevel = "None"
    },

    LuaDocumentation = "${DOCUMENTATION}/LuaScripting.html",
    PropertyDocumentation = "${DOCUMENTATION}/Properties.html",
    ScriptLog = "${LOGS}/ScriptLog.txt",
    KeyboardShortcuts = "${DOCUMENTATION}/KeyboardMapping.html",
    Documentation = "${DOCUMENTATION}/Documentation.html",
    FactoryDocumentation = "${DOCUMENTATION}/FactoryDocumentation.html",

    ShutdownCountdown = 0,
    DownloadRequestURL = "http://data.openspaceproject.com/request.cgi",
    RenderingMethod = "ABuffer",
    OpenGLDebugContext = {
       Activate = true,
       FilterIdentifier = {
           { Type = "Other", Source = "API", Identifier = 131185 },
           { Type = "Performance", Source = "API", Identifier = 131186 }, --Buffer performance warning: "copied/moved from VIDEO memory to HOST memory"
           { Type = "Deprecated", Source = "API", Identifier = 7} -- API_ID_LINE_WIDTH deprecated behavior warning has been generated
       },
    },
}
