local assetHelper = asset.require('util/asset_helper')
local transforms = asset.require('./transforms')

local fieldlinesDirectory = asset.localResource("fl_scs_oi_boundary")
local transferFunctions = asset.localResource("transferfunctions")
local polarityColorTable = transferFunctions .. "/scs_spec.txt"

local sunRadius = 695508000

-- Fieldlies from json
local fieldlines = {
    Identifier = "WSA_Fieldlines_SCS_OI_BOUNDARY",
    Parent = transforms.HNMReferenceFrame.Identifier,
    Renderable = {
        Type = "RenderableFieldlinesSequence",
        SourceFolder = fieldlinesDirectory,
        FlowEnabled = false,
        AlphaBlendlingEnabled = false,
        InputFileType = "osfls",
        ColorTablePaths = {
            polarityColorTable
        }, 
        ColorTableRanges = {
            { -0.02, 0.02 },
        },
        LoadAtRuntime = false,
        ScaleToMeters = 1.0,
        SecondsBefore = 24*60*60,
        SecondsAfter = 24*60*60,
        SimulationModel = "wsa",
        Color = {
            Uniform = {0.725, 0.1, 0, 1}
        }
    },
    GUI = {
        Path = "/Solar System/Heliosphere",
        Name = "WSA SCS Out to In Only Boundary Lines"
    },
    Transform = {
        Scale = {
            Type = "StaticScale",
            Scale = sunRadius
        },
    }
} 

assetHelper.registerSceneGraphNodesAndExport(asset, { fieldlines })