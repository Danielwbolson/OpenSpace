local transforms = asset.require('./neptune')
local assetHelper = asset.require('util/asset_helper')



local Atmosphere = {
    Identifier = "NeptuneAtmosphere",
    Parent = transforms.Neptune.Identifier,
    Renderable = {
        Type = "RenderableAtmosphere",
        Atmosphere = {
            -- Atmosphere radius in Km
            AtmosphereRadius = 24824.0,
            PlanetRadius = 24764.0,
            PlanetAverageGroundReflectance = 0.1,
            GroundRadianceEmittion = 0.37,
            SunIntensity = 13.1,
            MieScatteringExtinctionPropCoefficient = 0.23862,
            Rayleigh = {
                Coefficients = {
                    -- Wavelengths are given in 10^-9m
                    Wavelengths = { 680, 550, 440 },
                    -- Reflection coefficients are given in km^-1
                    Scattering = { 0.00001, 0.0, 0.0 }
                    -- In Rayleigh scattering, the coefficients of 
                    -- absorption and scattering are the same.
                },
            -- Thichkness of atmosphere if its density were uniform, in Km
                H_R = 19.01
            },
            -- Default
            Mie = {
                Coefficients = {
                    -- Reflection coefficients are given in km^-1
                    Scattering = { 0.001, 0.001, 0.001 },
                    -- Extinction coefficients are a fraction of the Scattering coefficients
                    Extinction = { 0.00025, 0.0003, 0.0005 }
                },
                -- Mie Height scale (atmosphere thickness for constant density) in Km
                H_M = 19.01,
                -- Mie Phase Function Value (G e [-1.0, 1.0]. 
                -- If G = 1.0, Mie phase function = Rayleigh Phase Function)
                G = -0.1
            },
            Debug = {
                -- PreCalculatedTextureScale is a float from 1.0 to N, with N > 0.0 and N in Naturals (i.e., 1, 2, 3, 4, 5....)
                PreCalculatedTextureScale = 1.0,
                SaveCalculatedTextures = false
            }
        }
    },
    GUI = {
        Name = "Neptune Atmosphere",
        Path = "/Solar System/Planets/Neptune"
    }
}



assetHelper.registerSceneGraphNodesAndExport(asset, { Atmosphere })
