local assetHelper = asset.require('util/asset_helper')
local transforms = asset.require('transforms')



local textures = asset.syncedResource({
    Name = "Mars Curiosity Textures",
    Type = "HttpSynchronization",
    Identifier = "marscuriosity_textures",
    Version = 1
})

local models = asset.syncedResource({
    Name = "Mars Curiosity Model",
    Type = "HttpSynchronization",
    Identifier = "marscuriosity_model",
    Version = 3
})

-- Curiosity Model --

local Curiosity = {
    Name = "Curiosity",
    Parent = transforms.CuriosityPosition.Name,
    Tag = {"planet_solarsystem", "planet_terrestrial"},
    GuiPath = "Solar System/Planets/Mars/Curiosity"
}


local CuriosityModel = {
    Name = "CuriosityModel",
    Parent = Curiosity.Name,
    GuiPath = "/Solar Syste/Planets/Mars/Curiosity"
}


local CuriosityBody = {
    Name = "Curiosity_body",
    Parent = CuriosityModel.Name,
    Renderable = {
        Type = "RenderableModel",
        Body = "CURIOSITY",
        Geometry = {
          Type = "MultiModelGeometry",
          GeometryFile = models .. "/bodyTest.obj"
        },
        ColorTexture = textures .. "/MSLTextureTest.png"
    },
    GuiPath = "/Solar System/Planets/Mars/Curiosity"
}

-- Curiosity Model Instrumetns & Parts --

local CuriosityWheels = {
    Name = "Curiosity_wheels",
    Parent = CuriosityModel.Name,
    Renderable = {
        Type = "RenderableModel",
        Body = "CURIOSITY",
        Geometry = {
          Type = "MultiModelGeometry",
          GeometryFile = models .. "/wheelsTest.obj"
        },
        ColorTexture = textures .. "/MSLTextureTest.png"
    },
    Tag = {"planet_solarsystem", "planet_terrestrial"},
    GuiPath = "/Solar System/Planets/Mars/Curiosity"
}


assetHelper.registerSceneGraphNodesAndExport(asset, { 
    Curiosity,
    CuriosityModel,
    CuriosityBody,
    CuriosityWheels
})
