local assetHelper = asset.require('util/asset_helper')
local sunTransforms = asset.require('scene/solarsystem/sun/transforms')
local earthTransforms = asset.require('scene/solarsystem/planets/earth/transforms')
local earthAsset = asset.require('scene/solarsystem/planets/earth/earth')

local sceneHelper = asset.require('util/scene_helper')
local propertyHelper = asset.require('util/property_helper')

local models = asset.syncedResource({
    Name = "Dsn models",
    Type = "HttpSynchronization",
    Identifier = "dsn_34_model",
    Version = 1
})


local LightSources = {
    {
        Type = "SceneGraphLightSource",
        Identifier = "Sun",
        Node = sunTransforms.SolarSystemBarycenter.Identifier,
        Intensity = 1.0
    },
    {
        Identifier = "Camera",
        Type = "CameraLightSource",
        Intensity = 0.5
    }
}

local DSS14 = {
    Identifier = "DSS_14",
    Parent = earthAsset.Earth.Identifier,
    Transform = {
      Translation = {
         Type = "StaticTranslation",
         Position = { 0, 0, 0 }
      }
   },
    Renderable = {
        Type = "RenderableModel",
        Geometry = {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/dish.obj"
        },
        ColorTexture = models .. "/base_AO.png" 

    },
    GUI = {
        Name = "DSS14",
        Path = "/Solar System/DSS14"
    }
}

assetHelper.registerSceneGraphNodesAndExport(asset, {
    DSS14
})
