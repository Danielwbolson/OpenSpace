local assetHelper = asset.require("util/asset_helper")
local transforms = asset.require("./transforms")
local textures = asset.require('./sun_textures').TexturesPath
asset.require("spice/base")
local wsaOutDirectory = asset.localResource("sun_wsa.asset") -- wsa_out_fits


local Sun = {
    Identifier = "Sun",
    Parent = transforms.SunIAU.Identifier,
    Renderable = {
        Type = "RenderableTimeVaryingSphere",
        -- Use WebContent
        WebContent = true,
        -- Url to web content
        WebContentUrl = "https://iswa.gsfc.nasa.gov/IswaSystemWebApp/FilesInRangeServlet?dataID=1180",
        Enabled = true,
        Size = 6.957E8,
        Segments = 64,
        SourceFolder = wsaOutDirectory, -- Running locally
        MapType = "gong",
        DefaultTexture = textures .. "/sun.jpg",
        PerformShading = false
    },
    GUI = {
        Path = "/Solar System/Sun"
    }
}

local SunLabel = {
    Identifier = "SunLabel",
    Parent = Sun.Identifier,
    Renderable = {
        Enabled = false,
        Type = "RenderableLabels",
        LabelText = "Sun",
        FontSize = 100.0,
        LabelSize = 13.127,
        LabelMaxSize = 100.0,
        LabelMinSize = 1.0,
        LabelOrientationOption = "Camera View Direction",
        BlendMode = "Additive",
        EnableFading = true,
        FadeStartUnit = "Pm",
        FadeStartDistance = 2.841,
        FadeStartSpeed = 1.375,
        FadeEndUnit = "pc",
        FadeEndDistance = 1.326,
        FadeEndSpeed = 1.0
    },
    Tag = { "solarsystem_labels" },
    GUI = {
        Name = "Sun Label",
        Path = "/Solar System/Sun"
    }
}

assetHelper.registerSceneGraphNodesAndExport(asset, { Sun, SunLabel })
