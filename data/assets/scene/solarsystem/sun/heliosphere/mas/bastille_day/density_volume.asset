asset.info = {
    Name = "Predictive Science Inc. Volume Rendering Bastille Day",
    Version = "1.0",
    Description = " Volumetric rendering for the bastille day CME event ",
    Author = "OpenSpace team",
    URL = "https://dx.doi.org/10.3847/1538-4357/aab36d",
    License = ""
}

local assetHelper = asset.require("util/asset_helper")
local sunTransforms = asset.require('scene/solarsystem/sun/transforms')
local transforms = asset.require('./transforms')

local densityDirectory = asset.syncedResource({
    Name = "Bastille Day MAS Density",
    Type = "HttpSynchronization",
    Identifier = "bastille_day_mas_density",
    Version = 1
})

local sunRadius = 6.957E8

local densityVolume = {
    Identifier = "MAS_MHD_density",
    -- wrong Parent = sunTransforms.SolarSystemBarycenter.Identifier,
    Parent = sunTransforms.SunIAU.Identifier,
    -- wrong Parent = transforms.HNMReferenceFrame.Identifier,
    Renderable = {
        Type = "RenderableTimeVaryingVolume",
        StepSize = 0.004,
        Opacity = 0.3,
        TransferFunction = asset.localResource("transferfunctions/mas_mhd_r_squared.txt"),
        SourceDirectory = densityDirectory,
        LowerValueBound = 0,
        UpperValueBound = 1,
        GridType = "Spherical",
        SecondsBefore = 24*60*60,
        SecondsAfter = 24*60*60
    },
    Transform = {
        Scale = {
            Type = "StaticScale",
            Scale = sunRadius
        },
        Rotation = {
            Type = "FixedRotation", --LuaRotation
            XAxis = {0.0, 1.0, 0.0},
            YAxis = {1.0, 0.0, 0.0},     
            ZAxis = {0.0, 0.0, -1.0}

            --Script = asset.localResource("kernels/carringtonRotation.lua")
        }       
    },
    GUI = {
        Name = "MAS Density",
        Path = "/Solar System/Heliosphere"
    }
}

assetHelper.registerSceneGraphNodesAndExport(asset, { densityVolume })
